#ifndef SYSCALL_H
#define SYSCALL_H

enum SYSCALL {
  SYSCALL_READ = 1, //READ FROM A FILE DESCRIPTOR	0X00	CHAR __USER *BUF	SIZE_T COUNT				FS/READ_WRITE.C:584
  SYSCALL_WRITE = 2, //WRITE TO A FILE DESCRIPTOR	0X01	CONST CHAR __USER *BUF	SIZE_T COUNT				FS/READ_WRITE.C:599
  SYSCALL_OPEN = 3, //OPEN AND POSSIBLY CREATE A FILE	0X02	INT FLAGS	UMODE_T MODE				FS/FHANDLE.C:255
  SYSCALL_CLOSE = 4, //CLOSE A FILE DESCRIPTOR	0X03						FS/OPEN.C:1127
  SYSCALL_NEWSTAT = 5, //	0X04	STRUCT STAT __USER *STATBUF					FS/STAT.C:266
  SYSCALL_NEWFSTAT = 6, //	0X05	STRUCT STAT __USER *STATBUF					FS/STAT.C:304
  SYSCALL_NEWLSTAT = 7, //	0X06	STRUCT STAT __USER *STATBUF					FS/STAT.C:277
  SYSCALL_POLL = 8, //WAIT FOR SOME EVENT ON A FILE DESCRIPTOR	0X07	UNSIGNED INT NFDS	INT TIMEOUT				FS/SELECT.C:971
  SYSCALL_LSEEK = 9, //REPOSITION READ/WRITE FILE OFFSET	0X08	OFF_T OFFSET	UNSIGNED INT WHENCE				FS/READ_WRITE.C:305
  SYSCALL_MMAP = 10, //MAP OR UNMAP FILES OR DEVICES INTO MEMORY	0X09	UNSIGNED LONG LEN	INT PROT	INT FLAGS	INT FD	LONG OFF	ARCH/MICROBLAZE/KERNEL/SYS_MICROBLAZE.C:36
  SYSCALL_MPROTECT = 11, //SET PROTECTION ON A REGION OF MEMORY	0X0A	SIZE_T LEN	UNSIGNED LONG PROT				MM/MPROTECT.C:494
  SYSCALL_MUNMAP = 12, //MAP OR UNMAP FILES OR DEVICES INTO MEMORY	0X0B	SIZE_T LEN					MM/MMAP.C:2681
  SYSCALL_BRK = 13, //CHANGE DATA SEGMENT SIZE	0X0C						MM/MMAP.C:181
  SYSCALL_RT_SIGACTION = 14, //EXAMINE AND CHANGE A SIGNAL ACTION	0X0D	CONST STRUCT SIGACTION __USER *	STRUCT SIGACTION __USER *	SIZE_T			KERNEL/SIGNAL.C:3321
  SYSCALL_RT_SIGPROCMASK = 15, //EXAMINE AND CHANGE BLOCKED SIGNALS	0X0E	SIGSET_T __USER *SET	SIGSET_T __USER *OSET	SIZE_T SIGSETSIZE			KERNEL/SIGNAL.C:2548
  SYSCALL_IOCTL = 16, //CONTROL DEVICE	0X0F	UNSIGNED INT CMD	UNSIGNED LONG ARG				FS/IOCTL.C:689
  SYSCALL_PREAD64 = 17, //READ FROM OR WRITE TO A FILE DESCRIPTOR AT A GIVEN OFFSET	0X10	CHAR __USER *BUF	SIZE_T COUNT	LOFF_T POS			FS/READ_WRITE.C:616
  SYSCALL_PWRITE64 = 18, //READ FROM OR WRITE TO A FILE DESCRIPTOR AT A GIVEN OFFSET	0X11	CONST CHAR __USER *BUF	SIZE_T COUNT	LOFF_T POS			FS/READ_WRITE.C:636
  SYSCALL_READV = 19, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X12	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN				FS/READ_WRITE.C:1008
  SYSCALL_WRITEV = 20, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X13	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN				FS/READ_WRITE.C:1014
  SYSCALL_ACCESS = 21, //CHECK USER'S PERMISSIONS FOR A FILE	0X14	INT MODE					FS/OPEN.C:430
  SYSCALL_PIPE = 22, //CREATE PIPE	0X15						FS/PIPE.C:861
  SYSCALL_SELECT = 23, //SYNCHRONOUS I/O MULTIPLEXING	0X16	FD_SET __USER *INP	FD_SET __USER *OUTP	FD_SET __USER *EXP	STRUCT TIMEVAL __USER *TVP		FS/SELECT.C:634
  SYSCALL_SCHED_YIELD = 24, //YIELD THE PROCESSOR	0X17						KERNEL/SCHED/CORE.C:4882
  SYSCALL_MREMAP = 25, //REMAP A VIRTUAL MEMORY ADDRESS	0X18	UNSIGNED LONG OLD_LEN	UNSIGNED LONG NEW_LEN	UNSIGNED LONG FLAGS	UNSIGNED LONG NEW_ADDR		MM/MREMAP.C:491
  SYSCALL_MSYNC = 26, //SYNCHRONIZE A FILE WITH A MEMORY MAP	0X19	SIZE_T LEN	INT FLAGS				MM/MSYNC.C:31
  SYSCALL_MINCORE = 27, //DETERMINE WHETHER PAGES ARE RESIDENT IN MEMORY	0X1A	SIZE_T LEN	UNSIGNED CHAR __USER * VEC				MM/MINCORE.C:222
  SYSCALL_MADVISE = 28, //GIVE ADVICE ABOUT USE OF MEMORY	0X1B	SIZE_T LEN	INT BEHAVIOR				MM/MADVISE.C:677
  SYSCALL_SHMGET = 29, //ALLOCATES A SYSTEM V SHARED MEMORY SEGMENT	0X1C	SIZE_T SIZE	INT FLAG				IPC/SHM.C:657
  SYSCALL_SHMAT = 30, //SYSTEM V SHARED MEMORY OPERATIONS	0X1D	CHAR __USER *SHMADDR	INT SHMFLG				IPC/SHM.C:1255
  SYSCALL_SHMCTL = 31, //SYSTEM V SHARED MEMORY CONTROL	0X1E	INT CMD	STRUCT SHMID_DS __USER *BUF				IPC/SHM.C:987
  SYSCALL_DUP = 32, //DUPLICATE A FILE DESCRIPTOR	0X1F						FS/FILE.C:938
  SYSCALL_DUP2 = 33, //DUPLICATE A FILE DESCRIPTOR	0X20	UNSIGNED INT NEWFD					FS/FILE.C:923
  SYSCALL_PAUSE = 34, //WAIT FOR SIGNAL	0X21						KERNEL/SIGNAL.C:3518
  SYSCALL_NANOSLEEP = 35, //HIGH	0X22	STRUCT TIMESPEC __USER *RMTP					KERNEL/TIME/HRTIMER.C:1576
  SYSCALL_GETITIMER = 36, //GET OR SET VALUE OF AN INTERVAL TIMER	0X23	STRUCT ITIMERVAL __USER *VALUE					KERNEL/TIME/ITIMER.C:103
  SYSCALL_ALARM = 37, //SET AN ALARM CLOCK FOR DELIVERY OF A SIGNAL	0X24						KERNEL/TIME/ITIMER.C:284
  SYSCALL_SETITIMER = 38, //GET OR SET VALUE OF AN INTERVAL TIMER	0X25	STRUCT ITIMERVAL __USER *VALUE	STRUCT ITIMERVAL __USER *OVALUE				KERNEL/TIME/ITIMER.C:291
  SYSCALL_GETPID = 39, //GET PROCESS IDENTIFICATION	0X26						KERNEL/SYS.C:830
  SYSCALL_SENDFILE64 = 40, //TRANSFER DATA BETWEEN FILE DESCRIPTORS	0X27	INT IN_FD	LOFF_T __USER *OFFSET	SIZE_T COUNT			FS/READ_WRITE.C:1448
  SYSCALL_SOCKET = 41, //CREATE AN ENDPOINT FOR COMMUNICATION	0X28	INT	INT				NET/SOCKET.C:1249
  SYSCALL_CONNECT = 42, //INITIATE A CONNECTION ON A SOCKET	0X29	STRUCT SOCKADDR __USER *	INT				NET/SOCKET.C:1560
  SYSCALL_ACCEPT = 43, //ACCEPT A CONNECTION ON A SOCKET	0X2A	STRUCT SOCKADDR __USER *	INT __USER *				NET/SOCKET.C:1542
  SYSCALL_SENDTO = 44, //SEND A MESSAGE ON A SOCKET	0X2B	VOID __USER *	SIZE_T	UNSIGNED	STRUCT SOCKADDR __USER *	INT	NET/SOCKET.C:1655
  SYSCALL_RECVFROM = 45, //RECEIVE A MESSAGE FROM A SOCKET	0X2C	VOID __USER *	SIZE_T	UNSIGNED	STRUCT SOCKADDR __USER *	INT __USER *	NET/SOCKET.C:1711
  SYSCALL_SENDMSG = 46, //SEND A MESSAGE ON A SOCKET	0X2D	STRUCT USER_MSGHDR __USER *MSG	UNSIGNED FLAGS				NET/SOCKET.C:2026
  SYSCALL_RECVMSG = 47, //RECEIVE A MESSAGE FROM A SOCKET	0X2E	STRUCT USER_MSGHDR __USER *MSG	UNSIGNED FLAGS				NET/SOCKET.C:2196
  SYSCALL_SHUTDOWN = 48, //SHUT DOWN PART OF A FULL	0X2F	INT					NET/SOCKET.C:1831
  SYSCALL_BIND = 49, //BIND A NAME TO A SOCKET	0X30	STRUCT SOCKADDR __USER *	INT				NET/SOCKET.C:1399
  SYSCALL_LISTEN = 50, //LISTEN FOR CONNECTIONS ON A SOCKET	0X31	INT					NET/SOCKET.C:1428
  SYSCALL_GETSOCKNAME = 51, //GET SOCKET NAME	0X32	STRUCT SOCKADDR __USER *	INT __USER *				NET/SOCKET.C:1592
  SYSCALL_GETPEERNAME = 52, //GET NAME OF CONNECTED PEER SOCKET	0X33	STRUCT SOCKADDR __USER *	INT __USER *				NET/SOCKET.C:1623
  SYSCALL_SOCKETPAIR = 53, //CREATE A PAIR OF CONNECTED SOCKETS	0X34	INT	INT	INT __USER *			NET/SOCKET.C:1290
  SYSCALL_SETSOCKOPT = 54, //GET AND SET OPTIONS ON SOCKETS	0X35	INT LEVEL	INT OPTNAME	CHAR __USER *OPTVAL	INT OPTLEN		NET/SOCKET.C:1767
  SYSCALL_GETSOCKOPT = 55, //GET AND SET OPTIONS ON SOCKETS	0X36	INT LEVEL	INT OPTNAME	CHAR __USER *OPTVAL	INT __USER *OPTLEN		NET/SOCKET.C:1801
  SYSCALL_EXIT = 56, //TERMINATE THE CALLING PROCESS	0X37						KERNEL/EXIT.C:910
  SYSCALL_WAIT4 = 57, //WAIT FOR PROCESS TO CHANGE STATE, BSD STYLE	0X38	INT __USER *STAT_ADDR	INT OPTIONS	STRUCT RUSAGE __USER *RU			KERNEL/EXIT.C:1664
  SYSCALL_KILL = 58, //SEND SIGNAL TO A PROCESS	0X39	INT SIG					KERNEL/SIGNAL.C:2860
  SYSCALL_NEWUNAME = 59, //	0X3A						KERNEL/SYS.C:1141
  SYSCALL_SEMGET = 60, //GET A SYSTEM V SEMAPHORE SET IDENTIFIER	0X3B	INT NSEMS	INT SEMFLG				IPC/SEM.C:545
  SYSCALL_SEMOP = 61, //SYSTEM V SEMAPHORE OPERATIONS	0X3C	STRUCT SEMBUF __USER *SOPS	UNSIGNED NSOPS				IPC/SEM.C:2012
  SYSCALL_SEMCTL = 62, //SYSTEM V SEMAPHORE CONTROL OPERATIONS	0X3D	INT SEMNUM	INT CMD	UNSIGNED LONG ARG			IPC/SEM.C:1576
  SYSCALL_SHMDT = 63, //SYSTEM V SHARED MEMORY OPERATIONS	0X3E						IPC/SHM.C:1271
  SYSCALL_MSGGET = 64, //GET A SYSTEM V MESSAGE QUEUE IDENTIFIER	0X3F	INT MSGFLG					IPC/MSG.C:265
  SYSCALL_MSGSND = 65, //SYSTEM V MESSAGE QUEUE OPERATIONS	0X40	STRUCT MSGBUF __USER *MSGP	SIZE_T MSGSZ	INT MSGFLG			IPC/MSG.C:743
  SYSCALL_MSGRCV = 66, //SYSTEM V MESSAGE QUEUE OPERATIONS	0X41	STRUCT MSGBUF __USER *MSGP	SIZE_T MSGSZ	LONG MSGTYP	INT MSGFLG		IPC/MSG.C:1007
  SYSCALL_MSGCTL = 67, //SYSTEM V MESSAGE CONTROL OPERATIONS	0X42	INT CMD	STRUCT MSQID_DS __USER *BUF				IPC/MSG.C:555
  SYSCALL_FCNTL = 68, //MANIPULATE FILE DESCRIPTOR	0X43	UNSIGNED INT CMD	UNSIGNED LONG ARG				FS/FCNTL.C:357
  SYSCALL_FLOCK = 69, //APPLY OR REMOVE AN ADVISORY LOCK ON AN OPEN FILE	0X44	UNSIGNED INT CMD					FS/LOCKS.C:1988
  SYSCALL_FSYNC = 70, //SYNCHRONIZE A FILE'S IN	0X45						FS/SYNC.C:225
  SYSCALL_FDATASYNC = 71, //SYNCHRONIZE A FILE'S IN	0X46						FS/SYNC.C:230
  SYSCALL_TRUNCATE = 72, //TRUNCATE A FILE TO A SPECIFIED LENGTH	0X47	LONG LENGTH					FS/OPEN.C:153
  SYSCALL_FTRUNCATE = 73, //TRUNCATE A FILE TO A SPECIFIED LENGTH	0X48	UNSIGNED LONG LENGTH					FS/OPEN.C:212
  SYSCALL_GETDENTS = 74, //GET DIRECTORY ENTRIES	0X49	STRUCT LINUX_DIRENT __USER *DIRENT	UNSIGNED INT COUNT				FS/READDIR.C:211
  SYSCALL_GETCWD = 75, //GET CURRENT WORKING DIRECTORY	0X4A	UNSIGNED LONG SIZE					FS/DCACHE.C:3413
  SYSCALL_CHDIR = 76, //CHANGE WORKING DIRECTORY	0X4B						FS/OPEN.C:435
  SYSCALL_FCHDIR = 77, //CHANGE WORKING DIRECTORY	0X4C						FS/OPEN.C:461
  SYSCALL_RENAME = 78, //CHANGE THE NAME OR LOCATION OF A FILE	0X4D	CONST CHAR __USER *NEWNAME					FS/NAMEI.C:4570
  SYSCALL_MKDIR = 79, //CREATE A DIRECTORY	0X4E	UMODE_T MODE					FS/NAMEI.C:3770
  SYSCALL_RMDIR = 80, //DELETE A DIRECTORY	0X4F						FS/NAMEI.C:3873
  SYSCALL_CREAT = 81, //OPEN AND POSSIBLY CREATE A FILE	0X50	UMODE_T MODE					FS/OPEN.C:1089
  SYSCALL_LINK = 82, //MAKE A NEW NAME FOR A FILE	0X51	CONST CHAR __USER *NEWNAME					FS/NAMEI.C:4242
  SYSCALL_UNLINK = 83, //DELETE A NAME AND POSSIBLY THE FILE IT REFERS TO	0X52						FS/NAMEI.C:4026
  SYSCALL_SYMLINK = 84, //MAKE A NEW NAME FOR A FILE	0X53	CONST CHAR __USER *NEW					FS/NAMEI.C:4083
  SYSCALL_READLINK = 85, //READ VALUE OF A SYMBOLIC LINK	0X54	CHAR __USER *BUF	INT BUFSIZ				FS/STAT.C:351
  SYSCALL_CHMOD = 86, //CHANGE PERMISSIONS OF A FILE	0X55	UMODE_T MODE					FS/OPEN.C:579
  SYSCALL_FCHMOD = 87, //CHANGE PERMISSIONS OF A FILE	0X56	UMODE_T MODE					FS/OPEN.C:548
  SYSCALL_CHOWN = 88, //CHANGE OWNERSHIP OF A FILE	0X57	UID_T USER	GID_T GROUP				FS/OPEN.C:658
  SYSCALL_FCHOWN = 89, //CHANGE OWNERSHIP OF A FILE	0X58	UID_T USER	GID_T GROUP				FS/OPEN.C:669
  SYSCALL_LCHOWN = 90, //CHANGE OWNERSHIP OF A FILE	0X59	UID_T USER	GID_T GROUP				FS/OPEN.C:663
  SYSCALL_UMASK = 91, //SET FILE MODE CREATION MASK	0X5A						KERNEL/SYS.C:1647
  SYSCALL_GETTIMEOFDAY = 92, //GET / SET TIME	0X5B	STRUCT TIMEZONE __USER *TZ					KERNEL/TIME/TIME.C:102
  SYSCALL_GETRLIMIT = 93, //GET/SET RESOURCE LIMITS	0X5C	STRUCT RLIMIT __USER *RLIM					KERNEL/SYS.C:1290
  SYSCALL_GETRUSAGE = 94, //GET RESOURCE USAGE	0X5D	STRUCT RUSAGE __USER *RU					KERNEL/SYS.C:1625
  SYSCALL_SYSINFO = 95, //RETURN SYSTEM INFORMATION	0X5E						KERNEL/SYS.C:2350
  SYSCALL_TIMES = 96, //GET PROCESS TIMES	0X5F						KERNEL/SYS.C:895
  SYSCALL_PTRACE = 97, //PROCESS TRACE	0X60	LONG PID	UNSIGNED LONG ADDR	UNSIGNED LONG DATA			KERNEL/PTRACE.C:1108
  SYSCALL_GETUID = 98, //GET USER IDENTITY	0X61						KERNEL/SYS.C:858
  SYSCALL_SYSLOG = 99, //READ AND/OR CLEAR KERNEL MESSAGE RING BUFFER; SET CONSOLE_LOGLEVEL	0X62	CHAR __USER *BUF	INT LEN				KERNEL/PRINTK/PRINTK.C:1503
  SYSCALL_GETGID = 100, //GET GROUP IDENTITY	0X63						KERNEL/SYS.C:870
  SYSCALL_SETUID = 101, //SET USER IDENTITY	0X64						KERNEL/SYS.C:533
  SYSCALL_SETGID = 102, //SET GROUP IDENTITY	0X65						KERNEL/SYS.C:386
  SYSCALL_GETEUID = 103, //GET USER IDENTITY	0X66						KERNEL/SYS.C:864
  SYSCALL_GETEGID = 104, //GET GROUP IDENTITY	0X67						KERNEL/SYS.C:876
  SYSCALL_SETPGID = 105, //SET/GET PROCESS GROUP	0X68	PID_T PGID					KERNEL/SYS.C:919
  SYSCALL_GETPPID = 106, //GET PROCESS IDENTIFICATION	0X69						KERNEL/SYS.C:847
  SYSCALL_GETPGRP = 107, //SET/GET PROCESS GROUP	0X6A						KERNEL/SYS.C:1020
  SYSCALL_SETSID = 108, //CREATES A SESSION AND SETS THE PROCESS GROUP ID	0X6B						KERNEL/SYS.C:1066
  SYSCALL_SETREUID = 109, //SET REAL AND/OR EFFECTIVE USER OR GROUP ID	0X6C	UID_T EUID					KERNEL/SYS.C:462
  SYSCALL_SETREGID = 110, //SET REAL AND/OR EFFECTIVE USER OR GROUP ID	0X6D	GID_T EGID					KERNEL/SYS.C:329
  SYSCALL_GETGROUPS = 111, //GET/SET LIST OF SUPPLEMENTARY GROUP IDS	0X6E	GID_T __USER *GROUPLIST					KERNEL/GROUPS.C:165
  SYSCALL_SETGROUPS = 112, //GET/SET LIST OF SUPPLEMENTARY GROUP IDS	0X6F	GID_T __USER *GROUPLIST					KERNEL/GROUPS.C:202
  SYSCALL_SETRESUID = 113, //SET REAL, EFFECTIVE AND SAVED USER OR GROUP ID	0X70	UID_T EUID	UID_T SUID				KERNEL/SYS.C:580
  SYSCALL_GETRESUID = 114, //GET REAL, EFFECTIVE AND SAVED USER/GROUP IDS	0X71	UID_T __USER *EUID	UID_T __USER *SUID				KERNEL/SYS.C:645
  SYSCALL_SETRESGID = 115, //SET REAL, EFFECTIVE AND SAVED USER OR GROUP ID	0X72	GID_T EGID	GID_T SGID				KERNEL/SYS.C:667
  SYSCALL_GETRESGID = 116, //GET REAL, EFFECTIVE AND SAVED USER/GROUP IDS	0X73	GID_T __USER *EGID	GID_T __USER *SGID				KERNEL/SYS.C:719
  SYSCALL_GETPGID = 117, //SET/GET PROCESS GROUP	0X74						KERNEL/SYS.C:990
  SYSCALL_SETFSUID = 118, //SET USER IDENTITY USED FOR FILESYSTEM CHECKS	0X75						KERNEL/SYS.C:746
  SYSCALL_SETFSGID = 119, //SET GROUP IDENTITY USED FOR FILESYSTEM CHECKS	0X76						KERNEL/SYS.C:785
  SYSCALL_GETSID = 120, //GET SESSION ID	0X77						KERNEL/SYS.C:1027
  SYSCALL_CAPGET = 121, //SET/GET CAPABILITIES OF THREAD(S)	0X78	CAP_USER_DATA_T DATAPTR					KERNEL/CAPABILITY.C:149
  SYSCALL_CAPSET = 122, //SET/GET CAPABILITIES OF THREAD(S)	0X79	CONST CAP_USER_DATA_T DATA					KERNEL/CAPABILITY.C:223
  SYSCALL_RT_SIGPENDING = 123, //EXAMINE PENDING SIGNALS	0X7A	SIZE_T SIGSETSIZE					KERNEL/SIGNAL.C:2638
  SYSCALL_RT_SIGTIMEDWAIT = 124, //SYNCHRONOUSLY WAIT FOR QUEUED SIGNALS	0X7B	SIGINFO_T __USER *UINFO	CONST STRUCT TIMESPEC __USER *UTS	SIZE_T SIGSETSIZE			KERNEL/SIGNAL.C:2824
  SYSCALL_RT_SIGQUEUEINFO = 125, //QUEUE A SIGNAL AND DATA	0X7C	INT SIG	SIGINFO_T __USER *UINFO				KERNEL/SIGNAL.C:2972
  SYSCALL_RT_SIGSUSPEND = 126, //WAIT FOR A SIGNAL	0X7D	SIZE_T SIGSETSIZE					KERNEL/SIGNAL.C:3548
  SYSCALL_SIGALTSTACK = 127, //SET AND/OR GET SIGNAL STACK CONTEXT	0X7E	STRUCT SIGALTSTACK __USER *UOSS					KERNEL/SIGNAL.C:3173
  SYSCALL_UTIME = 128, //CHANGE FILE LAST ACCESS AND MODIFICATION TIMES	0X7F	STRUCT UTIMBUF __USER *TIMES					FS/UTIMES.C:27
  SYSCALL_MKNOD = 129, //CREATE A SPECIAL OR ORDINARY FILE	0X80	UMODE_T MODE	UNSIGNED DEV				FS/NAMEI.C:3714
  SYSCALL_PERSONALITY = 130, //SET THE PROCESS EXECUTION DOMAIN	0X81						KERNEL/EXEC_DOMAIN.C:50
  SYSCALL_USTAT = 131, //GET FILESYSTEM STATISTICS	0X82	STRUCT USTAT __USER *UBUF					FS/STATFS.C:228
  SYSCALL_STATFS = 132, //GET FILESYSTEM STATISTICS	0X83	STRUCT STATFS __USER *BUF					FS/STATFS.C:172
  SYSCALL_FSTATFS = 133, //GET FILESYSTEM STATISTICS	0X84	STRUCT STATFS __USER *BUF					FS/STATFS.C:193
  SYSCALL_SYSFS = 134, //GET FILESYSTEM TYPE INFORMATION	0X85	UNSIGNED LONG ARG1	UNSIGNED LONG ARG2				FS/FILESYSTEMS.C:184
  SYSCALL_GETPRIORITY = 135, //GET/SET PROGRAM SCHEDULING PRIORITY	0X86	INT WHO					KERNEL/SYS.C:245
  SYSCALL_SETPRIORITY = 136, //GET/SET PROGRAM SCHEDULING PRIORITY	0X87	INT WHO	INT NICEVAL				KERNEL/SYS.C:175
  SYSCALL_SCHED_SETPARAM = 137, //SET AND GET SCHEDULING PARAMETERS	0X88	STRUCT SCHED_PARAM __USER *PARAM					KERNEL/SCHED/CORE.C:4491
  SYSCALL_SCHED_GETPARAM = 138, //SET AND GET SCHEDULING PARAMETERS	0X89	STRUCT SCHED_PARAM __USER *PARAM					KERNEL/SCHED/CORE.C:4565
  SYSCALL_SCHED_SETSCHEDULER = 139, //SET AND GET SCHEDULING POL‐ ICY/PARAMETERS	0X8A	INT POLICY	STRUCT SCHED_PARAM __USER *PARAM				KERNEL/SCHED/CORE.C:4474
  SYSCALL_SCHED_GETSCHEDULER = 140, //SET AND GET SCHEDULING POL‐ ICY/PARAMETERS	0X8B						KERNEL/SCHED/CORE.C:4536
  SYSCALL_SCHED_GET_PRIORITY_MAX = 141, //GET STATIC PRIORITY RANGE	0X8C						KERNEL/SCHED/CORE.C:5093
  SYSCALL_SCHED_GET_PRIORITY_MIN = 142, //GET STATIC PRIORITY RANGE	0X8D						KERNEL/SCHED/CORE.C:5120
  SYSCALL_SCHED_RR_GET_INTERVAL = 143, //GET THE SCHED_RR INTERVAL FOR THE NAMED PROCESS	0X8E	STRUCT TIMESPEC __USER *INTERVAL					KERNEL/SCHED/CORE.C:5149
  SYSCALL_MLOCK = 144, //LOCK AND UNLOCK MEMORY	0X8F	SIZE_T LEN					MM/MLOCK.C:712
  SYSCALL_MUNLOCK = 145, //LOCK AND UNLOCK MEMORY	0X90	SIZE_T LEN					MM/MLOCK.C:730
  SYSCALL_MLOCKALL = 146, //LOCK AND UNLOCK MEMORY	0X91						MM/MLOCK.C:791
  SYSCALL_MUNLOCKALL = 147, //LOCK AND UNLOCK MEMORY	0X92						MM/MLOCK.C:822
  SYSCALL_VHANGUP = 148, //VIRTUALLY HANGUP THE CURRENT TERMINAL	0X93						FS/OPEN.C:1146
  SYSCALL_MODIFY_LDT = 149, //GET OR SET A PER	0X94	VOID __USER *	UNSIGNED LONG				NOT FOUND:
  SYSCALL_PIVOT_ROOT = 150, //CHANGE THE ROOT FILESYSTEM	0X95	CONST CHAR __USER *PUT_OLD					FS/NAMESPACE.C:3086
  SYSCALL_SYSCTL = 151, //READ/WRITE SYSTEM PARAMETERS	0X96						KERNEL/SYSCTL_BINARY.C:1411
  SYSCALL_PRCTL = 152, //OPERATIONS ON A PROCESS	0X97	UNSIGNED LONG ARG2	UNSIGNED LONG ARG3	UNSIGNED LONG ARG4	UNSIGNED LONG ARG5		KERNEL/SYS.C:2066
  SYSCALL_ARCH_PRCTL = 153, //SET ARCHITECTURE	0X98	UNSIGNED LONG					NOT FOUND:
  SYSCALL_ADJTIMEX = 154, //TUNE KERNEL CLOCK	0X99						KERNEL/TIME/TIME.C:218
  SYSCALL_SETRLIMIT = 155, //GET/SET RESOURCE LIMITS	0X9A	STRUCT RLIMIT __USER *RLIM					KERNEL/SYS.C:1491
  SYSCALL_CHROOT = 156, //CHANGE ROOT DIRECTORY	0X9B						FS/OPEN.C:486
  SYSCALL_SYNC = 157, //COMMIT FILESYSTEM CACHES TO DISK	0X9C						FS/SYNC.C:107
  SYSCALL_ACCT = 158, //SWITCH PROCESS ACCOUNTING ON OR OFF	0X9D						KERNEL/ACCT.C:270
  SYSCALL_SETTIMEOFDAY = 159, //GET / SET TIME	0X9E	STRUCT TIMEZONE __USER *TZ					KERNEL/TIME/TIME.C:193
  SYSCALL_MOUNT = 160, //MOUNT FILESYSTEM	0X9F	CHAR __USER *DIR_NAME	CHAR __USER *TYPE	UNSIGNED LONG FLAGS	VOID __USER *DATA		FS/NAMESPACE.C:3002
  SYSCALL_UMOUNT = 161, //UNMOUNT FILESYSTEM	0XA0	INT FLAGS					FS/NAMESPACE.C:1666
  SYSCALL_SWAPON = 162, //START/STOP SWAPPING TO FILE/DEVICE	0XA1	INT SWAP_FLAGS					MM/SWAPFILE.C:2387
  SYSCALL_SWAPOFF = 163, //START/STOP SWAPPING TO FILE/DEVICE	0XA2						MM/SWAPFILE.C:1856
  SYSCALL_REBOOT = 164, //REBOOT OR ENABLE/DISABLE CTRL	0XA3	INT MAGIC2	UNSIGNED INT CMD	VOID __USER *ARG			KERNEL/REBOOT.C:280
  SYSCALL_SETHOSTNAME = 165, //GET/SET HOSTNAME	0XA4	INT LEN					KERNEL/SYS.C:1215
  SYSCALL_SETDOMAINNAME = 166, //GET/SET NIS DOMAIN NAME	0XA5	INT LEN					KERNEL/SYS.C:1266
  SYSCALL_IOPERM = 167, //SET PORT INPUT/OUTPUT PERMISSIONS	0XA6	UNSIGNED LONG	INT				NOT FOUND:
  SYSCALL_INIT_MODULE = 168, //LOAD A KERNEL MODULE	0XA7	UNSIGNED LONG LEN	CONST CHAR __USER *UARGS				KERNEL/MODULE.C:3770
  SYSCALL_DELETE_MODULE = 169, //UNLOAD A KERNEL MODULE	0XA8	UNSIGNED INT FLAGS					KERNEL/MODULE.C:934
  SYSCALL_QUOTACTL = 170, //MANIPULATE DISK QUOTAS	0XA9	CONST CHAR __USER *SPECIAL	QID_T ID	VOID __USER *ADDR			FS/QUOTA/QUOTA.C:835
  SYSCALL_GETTID = 171, //GET THREAD IDENTIFICATION	0XAA						KERNEL/SYS.C:836
  SYSCALL_READAHEAD = 172, //INITIATE FILE READAHEAD INTO PAGE CACHE	0XAB	LOFF_T OFFSET	SIZE_T COUNT				MM/READAHEAD.C:576
  SYSCALL_SETXATTR = 173, //SET AN EXTENDED ATTRIBUTE VALUE	0XAC	CONST CHAR __USER *NAME	CONST VOID __USER *VALUE	SIZE_T SIZE	INT FLAGS		FS/XATTR.C:479
  SYSCALL_LSETXATTR = 174, //SET AN EXTENDED ATTRIBUTE VALUE	0XAD	CONST CHAR __USER *NAME	CONST VOID __USER *VALUE	SIZE_T SIZE	INT FLAGS		FS/XATTR.C:486
  SYSCALL_FSETXATTR = 175, //SET AN EXTENDED ATTRIBUTE VALUE	0XAE	CONST CHAR __USER *NAME	CONST VOID __USER *VALUE	SIZE_T SIZE	INT FLAGS		FS/XATTR.C:493
  SYSCALL_GETXATTR = 176, //RETRIEVE AN EXTENDED ATTRIBUTE VALUE	0XAF	CONST CHAR __USER *NAME	VOID __USER *VALUE	SIZE_T SIZE			FS/XATTR.C:576
  SYSCALL_LGETXATTR = 177, //RETRIEVE AN EXTENDED ATTRIBUTE VALUE	0XB0	CONST CHAR __USER *NAME	VOID __USER *VALUE	SIZE_T SIZE			FS/XATTR.C:582
  SYSCALL_FGETXATTR = 178, //RETRIEVE AN EXTENDED ATTRIBUTE VALUE	0XB1	CONST CHAR __USER *NAME	VOID __USER *VALUE	SIZE_T SIZE			FS/XATTR.C:588
  SYSCALL_LISTXATTR = 179, //LIST EXTENDED ATTRIBUTE NAMES	0XB2	CHAR __USER *LIST	SIZE_T SIZE				FS/XATTR.C:655
  SYSCALL_LLISTXATTR = 180, //LIST EXTENDED ATTRIBUTE NAMES	0XB3	CHAR __USER *LIST	SIZE_T SIZE				FS/XATTR.C:661
  SYSCALL_FLISTXATTR = 181, //LIST EXTENDED ATTRIBUTE NAMES	0XB4	CHAR __USER *LIST	SIZE_T SIZE				FS/XATTR.C:667
  SYSCALL_REMOVEXATTR = 182, //REMOVE AN EXTENDED ATTRIBUTE	0XB5	CONST CHAR __USER *NAME					FS/XATTR.C:720
  SYSCALL_LREMOVEXATTR = 183, //REMOVE AN EXTENDED ATTRIBUTE	0XB6	CONST CHAR __USER *NAME					FS/XATTR.C:726
  SYSCALL_FREMOVEXATTR = 184, //REMOVE AN EXTENDED ATTRIBUTE	0XB7	CONST CHAR __USER *NAME					FS/XATTR.C:732
  SYSCALL_TKILL = 185, //SEND A SIGNAL TO A THREAD	0XB8	INT SIG					KERNEL/SIGNAL.C:2942
  SYSCALL_TIME = 186, //GET TIME IN SECONDS	0XB9						KERNEL/SYS.C:895
  SYSCALL_FUTEX = 187, //FAST USER	0XBA	INT OP	U32 VAL	STRUCT TIMESPEC __USER *UTIME	U32 __USER *UADDR2	U32 VAL3	KERNEL/FUTEX.C:3243
  SYSCALL_SCHED_SETAFFINITY = 188, //SET AND GET A THREAD'S CPU AFFINITY MASK	0XBB	UNSIGNED INT LEN	UNSIGNED LONG __USER *USER_MASK_PTR				KERNEL/SCHED/CORE.C:4794
  SYSCALL_SCHED_GETAFFINITY = 189, //SET AND GET A THREAD'S CPU AFFINITY MASK	0XBC	UNSIGNED INT LEN	UNSIGNED LONG __USER *USER_MASK_PTR				KERNEL/SCHED/CORE.C:4846
  SYSCALL_IO_SETUP = 190, //CREATE AN ASYNCHRONOUS I/O CONTEXT	0XBD	AIO_CONTEXT_T __USER *CTX					FS/AIO.C:1341
  SYSCALL_IO_DESTROY = 191, //DESTROY AN ASYNCHRONOUS I/O CONTEXT	0XBE						FS/AIO.C:1410
  SYSCALL_IO_GETEVENTS = 192, //READ ASYNCHRONOUS I/O EVENTS FROM THE COMPLETION QUEUE	0XBF	LONG MIN_NR	LONG NR	STRUCT IO_EVENT __USER *EVENTS	STRUCT TIMESPEC __USER *TIMEOUT		FS/AIO.C:1821
  SYSCALL_IO_SUBMIT = 193, //SUBMIT ASYNCHRONOUS I/O BLOCKS FOR PROCESSING	0XC0	LONG	STRUCT IOCB __USER * __USER *				FS/AIO.C:1694
  SYSCALL_IO_CANCEL = 194, //CANCEL AN OUTSTANDING ASYNCHRONOUS I/O OPERATION	0XC1	STRUCT IOCB __USER *IOCB	STRUCT IO_EVENT __USER *RESULT				FS/AIO.C:1769
  SYSCALL_LOOKUP_DCOOKIE = 195, //RETURN A DIRECTORY ENTRY'S PATH	0XC2	CHAR __USER *BUF	SIZE_T LEN				FS/DCOOKIES.C:149
  SYSCALL_EPOLL_CREATE = 196, //OPEN AN EPOLL FILE DESCRIPTOR	0XC3						FS/EVENTPOLL.C:1836
  SYSCALL_REMAP_FILE_PAGES = 197, //CREATE A NONLINEAR FILE MAPPING	0XC4	UNSIGNED LONG SIZE	UNSIGNED LONG PROT	UNSIGNED LONG PGOFF	UNSIGNED LONG FLAGS		MM/MMAP.C:2698
  SYSCALL_GETDENTS64 = 198, //GET DIRECTORY ENTRIES	0XC5	STRUCT LINUX_DIRENT64 __USER *DIRENT	UNSIGNED INT COUNT				FS/READDIR.C:294
  SYSCALL_SET_TID_ADDRESS = 199, //SET POINTER TO THREAD ID	0XC6						KERNEL/FORK.C:1411
  SYSCALL_RESTART_SYSCALL = 200, //RESTART A SYSTEM CALL AFTER INTERRUPTION BY A STOP SIGNAL	0XC7						KERNEL/SIGNAL.C:2454
  SYSCALL_SEMTIMEDOP = 201, //SYSTEM V SEMAPHORE OPERATIONS	0XC8	STRUCT SEMBUF __USER *SOPS	UNSIGNED NSOPS	CONST STRUCT TIMESPEC __USER *TIMEOUT			IPC/SEM.C:1755
  SYSCALL_FADVISE64 = 202, //PREDECLARE AN ACCESS PATTERN FOR FILE DATA	0XC9	LOFF_T OFFSET	SIZE_T LEN	INT ADVICE			MM/FADVISE.C:181
  SYSCALL_TIMER_CREATE = 203, //CREATE A POSIX PER	0XCA	STRUCT SIGEVENT __USER *TIMER_EVENT_SPEC	TIMER_T __USER * CREATED_TIMER_ID				KERNEL/TIME/POSIX-TIMERS.C:602
  SYSCALL_TIMER_SETTIME = 204, //ARM/DISARM AND FETCH STATE OF POSIX PER	0XCB	INT FLAGS	CONST STRUCT ITIMERSPEC __USER *NEW_SETTING	STRUCT ITIMERSPEC __USER *OLD_SETTING			KERNEL/TIME/POSIX-TIMERS.C:881
  SYSCALL_TIMER_GETTIME = 205, //ARM/DISARM AND FETCH STATE OF POSIX PER	0XCC	STRUCT ITIMERSPEC __USER *SETTING					KERNEL/TIME/POSIX-TIMERS.C:777
  SYSCALL_TIMER_GETOVERRUN = 206, //GET OVERRUN COUNT FOR A POSIX PER	0XCD						KERNEL/TIME/POSIX-TIMERS.C:813
  SYSCALL_TIMER_DELETE = 207, //DELETE A POSIX PER	0XCE						KERNEL/TIME/POSIX-TIMERS.C:944
  SYSCALL_CLOCK_SETTIME = 208, //CLOCK AND TIME FUNCTIONS	0XCF	CONST STRUCT TIMESPEC __USER *TP					KERNEL/TIME/POSIX-STUBS.C:49
  SYSCALL_CLOCK_GETTIME = 209, //CLOCK AND TIME FUNCTIONS	0XD0	STRUCT TIMESPEC __USER *TP					KERNEL/TIME/POSIX-STUBS.C:61
  SYSCALL_CLOCK_GETRES = 210, //CLOCK AND TIME FUNCTIONS	0XD1	STRUCT TIMESPEC __USER *TP					KERNEL/TIME/POSIX-STUBS.C:77
  SYSCALL_CLOCK_NANOSLEEP = 211, //HIGH	0XD2	INT FLAGS	CONST STRUCT TIMESPEC __USER *RQTP	STRUCT TIMESPEC __USER *RMTP			KERNEL/TIME/POSIX-STUBS.C:96
  SYSCALL_EXIT_GROUP = 212, //EXIT ALL THREADS IN A PROCESS	0XD3						KERNEL/EXIT.C:952
  SYSCALL_EPOLL_WAIT = 213, //WAIT FOR AN I/O EVENT ON AN EPOLL FILE DESCRIPTOR	0XD4	STRUCT EPOLL_EVENT __USER *EVENTS	INT MAXEVENTS	INT TIMEOUT			FS/EVENTPOLL.C:2005
  SYSCALL_EPOLL_CTL = 214, //CONTROL INTERFACE FOR AN EPOLL FILE DESCRIPTOR	0XD5	INT OP	INT FD	STRUCT EPOLL_EVENT __USER *EVENT			FS/EVENTPOLL.C:1849
  SYSCALL_TGKILL = 215, //SEND A SIGNAL TO A THREAD	0XD6	PID_T PID	INT SIG				KERNEL/SIGNAL.C:2926
  SYSCALL_UTIMES = 216, //CHANGE FILE LAST ACCESS AND MODIFICATION TIMES	0XD7	STRUCT TIMEVAL __USER *UTIMES					FS/UTIMES.C:217
  SYSCALL_MBIND = 217, //SET MEMORY POLICY FOR A MEMORY RANGE	0XD8	UNSIGNED LONG LEN	UNSIGNED LONG MODE	CONST UNSIGNED LONG __USER *NMASK	UNSIGNED LONG MAXNODE	UNSIGNED FLAGS	MM/MEMPOLICY.C:1332
  SYSCALL_SET_MEMPOLICY = 218, //SET DEFAULT NUMA MEMORY POLICY FOR A THREAD AND ITS CHILDREN	0XD9	CONST UNSIGNED LONG __USER *NMASK	UNSIGNED LONG MAXNODE				MM/MEMPOLICY.C:1354
  SYSCALL_GET_MEMPOLICY = 219, //RETRIEVE NUMA MEMORY POLICY FOR A THREAD	0XDA	UNSIGNED LONG __USER *NMASK	UNSIGNED LONG MAXNODE	UNSIGNED LONG ADDR	UNSIGNED LONG FLAGS		MM/MEMPOLICY.C:1469
  SYSCALL_MQ_OPEN = 220, //OPEN A MESSAGE QUEUE	0XDB	INT OFLAG	UMODE_T MODE	STRUCT MQ_ATTR __USER *ATTR			IPC/MQUEUE.C:769
  SYSCALL_MQ_UNLINK = 221, //REMOVE A MESSAGE QUEUE	0XDC						IPC/MQUEUE.C:850
  SYSCALL_MQ_TIMEDSEND = 222, //SEND A MESSAGE TO A MESSAGE QUEUE	0XDD	CONST CHAR __USER *MSG_PTR	SIZE_T MSG_LEN	UNSIGNED INT MSG_PRIO	CONST STRUCT TIMESPEC __USER *ABS_TIMEOUT		IPC/MQUEUE.C:956
  SYSCALL_MQ_TIMEDRECEIVE = 223, //RECEIVE A MESSAGE FROM A MESSAGE QUEUE	0XDE	CHAR __USER *MSG_PTR	SIZE_T MSG_LEN	UNSIGNED INT __USER *MSG_PRIO	CONST STRUCT TIMESPEC __USER *ABS_TIMEOUT		IPC/MQUEUE.C:1077
  SYSCALL_MQ_NOTIFY = 224, //REGISTER FOR NOTIFICATION WHEN A MESSAGE IS AVAILABLE	0XDF	CONST STRUCT SIGEVENT __USER *NOTIFICATION					IPC/MQUEUE.C:1187
  SYSCALL_MQ_GETSETATTR = 225, //GET/SET MESSAGE QUEUE ATTRIBUTES	0XE0	CONST STRUCT MQ_ATTR __USER *MQSTAT	STRUCT MQ_ATTR __USER *OMQSTAT				IPC/MQUEUE.C:1319
  SYSCALL_KEXEC_LOAD = 226, //LOAD A NEW KERNEL FOR LATER EXECUTION	0XE1	UNSIGNED LONG NR_SEGMENTS	STRUCT KEXEC_SEGMENT __USER *SEGMENTS	UNSIGNED LONG FLAGS			KERNEL/KEXEC.C:187
  SYSCALL_WAITID = 227, //WAIT FOR PROCESS TO CHANGE STATE	0XE2	PID_T PID	STRUCT SIGINFO __USER *INFOP	INT OPTIONS	STRUCT RUSAGE __USER *RU		KERNEL/EXIT.C:1595
  SYSCALL_ADD_KEY = 228, //ADD A KEY TO THE KERNEL'S KEY MANAGEMENT FACILITY	0XE3	CONST CHAR __USER *_DESCRIPTION	CONST VOID __USER *_PAYLOAD	SIZE_T PLEN	KEY_SERIAL_T DESTRINGID		SECURITY/KEYS/KEYCTL.C:60
  SYSCALL_REQUEST_KEY = 229, //REQUEST A KEY FROM THE KERNEL'S KEY MANAGEMENT FACILITY	0XE4	CONST CHAR __USER *_DESCRIPTION	CONST CHAR __USER *_CALLOUT_INFO	KEY_SERIAL_T DESTRINGID			SECURITY/KEYS/KEYCTL.C:158
  SYSCALL_KEYCTL = 230, //MANIPULATE THE KERNEL'S KEY MANAGEMENT FACILITY	0XE5	UNSIGNED LONG ARG2	UNSIGNED LONG ARG3	UNSIGNED LONG ARG4	UNSIGNED LONG ARG5		SECURITY/KEYS/KEYCTL.C:1586
  SYSCALL_IOPRIO_SET = 231, //GET/SET I/O SCHEDULING CLASS AND PRIORITY	0XE6	INT WHO	INT IOPRIO				BLOCK/IOPRIO.C:61
  SYSCALL_IOPRIO_GET = 232, //GET/SET I/O SCHEDULING CLASS AND PRIORITY	0XE7	INT WHO					BLOCK/IOPRIO.C:181
  SYSCALL_INOTIFY_INIT = 233, //INITIALIZE AN INOTIFY INSTANCE	0XE8						FS/NOTIFY/INOTIFY/INOTIFY_USER.C:694
  SYSCALL_INOTIFY_ADD_WATCH = 234, //ADD A WATCH TO AN INITIALIZED INOTIFY INSTANCE	0XE9	CONST CHAR __USER *PATH	U32 MASK				FS/NOTIFY/INOTIFY/INOTIFY_USER.C:699
  SYSCALL_INOTIFY_RM_WATCH = 235, //REMOVE AN EXISTING WATCH FROM AN INOTIFY INSTANCE	0XEA	__S32 WD					FS/NOTIFY/INOTIFY/INOTIFY_USER.C:756
  SYSCALL_MIGRATE_PAGES = 236, //MOVE ALL PAGES IN A PROCESS TO ANOTHER SET OF NODES	0XEB	UNSIGNED LONG MAXNODE	CONST UNSIGNED LONG __USER *FROM	CONST UNSIGNED LONG __USER *TO			MM/MEMPOLICY.C:1373
  SYSCALL_OPENAT = 237, //OPEN AND POSSIBLY CREATE A FILE	0XEC	CONST CHAR __USER *FILENAME	INT FLAGS	UMODE_T MODE			FS/OPEN.C:1074
  SYSCALL_MKDIRAT = 238, //CREATE A DIRECTORY	0XED	CONST CHAR __USER * PATHNAME	UMODE_T MODE				FS/NAMEI.C:3745
  SYSCALL_MKNODAT = 239, //CREATE A SPECIAL OR ORDINARY FILE	0XEE	CONST CHAR __USER * FILENAME	UMODE_T MODE	UNSIGNED DEV			FS/NAMEI.C:3670
  SYSCALL_FCHOWNAT = 240, //CHANGE OWNERSHIP OF A FILE	0XEF	CONST CHAR __USER *FILENAME	UID_T USER	GID_T GROUP	INT FLAG		FS/OPEN.C:626
  SYSCALL_FUTIMESAT = 241, //CHANGE TIMESTAMPS OF A FILE RELATIVE TO A DIRECTORY FILE DESCRIPTOR	0XF0	CONST CHAR __USER *FILENAME	STRUCT TIMEVAL __USER *UTIMES				FS/UTIMES.C:189
  SYSCALL_NEWFSTATAT = 242, //GET FILE STATUS	0XF1	CONST CHAR __USER *FILENAME	STRUCT STAT __USER *STATBUF	INT FLAG			FS/STAT.C:291
  SYSCALL_UNLINKAT = 243, //DELETE A NAME AND POSSIBLY THE FILE IT REFERS TO	0XF2	CONST CHAR __USER * PATHNAME	INT FLAG				FS/NAMEI.C:4015
  SYSCALL_RENAMEAT = 244, //CHANGE THE NAME OR LOCATION OF A FILE	0XF3	CONST CHAR __USER * OLDNAME	INT NEWDFD	CONST CHAR __USER * NEWNAME			FS/NAMEI.C:4564
  SYSCALL_LINKAT = 245, //MAKE A NEW NAME FOR A FILE	0XF4	CONST CHAR __USER *OLDNAME	INT NEWDFD	CONST CHAR __USER *NEWNAME	INT FLAGS		FS/NAMEI.C:4177
  SYSCALL_SYMLINKAT = 246, //MAKE A NEW NAME FOR A FILE	0XF5	INT NEWDFD	CONST CHAR __USER * NEWNAME				FS/NAMEI.C:4052
  SYSCALL_READLINKAT = 247, //READ VALUE OF A SYMBOLIC LINK	0XF6	CONST CHAR __USER *PATH	CHAR __USER *BUF	INT BUFSIZ			FS/STAT.C:315
  SYSCALL_FCHMODAT = 248, //CHANGE PERMISSIONS OF A FILE	0XF7	CONST CHAR __USER * FILENAME	UMODE_T MODE				FS/OPEN.C:561
  SYSCALL_FACCESSAT = 249, //CHECK USER'S PERMISSIONS FOR A FILE	0XF8	CONST CHAR __USER *FILENAME	INT MODE				FS/OPEN.C:354
  SYSCALL_PSELECT6 = 250, //SYNCHRONOUS I/O MULTIPLEXING	0XF9	FD_SET __USER *INP	FD_SET __USER *OUTP	FD_SET __USER *EXP	STRUCT TIMESPEC __USER *TSP	VOID __USER *SIG	FS/SELECT.C:714
  SYSCALL_PPOLL = 251, //WAIT FOR SOME EVENT ON A FILE DESCRIPTOR	0XFA	UNSIGNED INT NFDS	STRUCT TIMESPEC __USER *TSP	CONST SIGSET_T __USER *SIGMASK	SIZE_T SIGSETSIZE		FS/SELECT.C:1005
  SYSCALL_UNSHARE = 252, //DISASSOCIATE PARTS OF THE PROCESS EXECUTION CONTEXT	0XFB						KERNEL/FORK.C:2181
  SYSCALL_SET_ROBUST_LIST = 253, //GET/SET LIST OF ROBUST FUTEXES	0XFC	SIZE_T LEN					KERNEL/FUTEX.C:2986
  SYSCALL_GET_ROBUST_LIST = 254, //GET/SET LIST OF ROBUST FUTEXES	0XFD	STRUCT ROBUST_LIST_HEAD __USER * __USER *HEAD_PTR	SIZE_T __USER *LEN_PTR				KERNEL/FUTEX.C:3008
  SYSCALL_SPLICE = 255, //SPLICE DATA TO/FROM A PIPE	0XFE	LOFF_T __USER *OFF_IN	INT FD_OUT	LOFF_T __USER *OFF_OUT	SIZE_T LEN	UNSIGNED INT FLAGS	FS/SPLICE.C:1400
  SYSCALL_TEE = 256, //DUPLICATING PIPE CONTENT	0XFF	INT FDOUT	SIZE_T LEN	UNSIGNED INT FLAGS			FS/SPLICE.C:1733
  SYSCALL_SYNC_FILE_RANGE = 257, //SYNC A FILE SEGMENT WITH DISK	0X100	LOFF_T OFFSET	LOFF_T NBYTES	UNSIGNED INT FLAGS			FS/SYNC.C:282
  SYSCALL_VMSPLICE = 258, //SPLICE USER PAGES INTO A PIPE	0X101	CONST STRUCT IOVEC __USER *IOV	UNSIGNED LONG NR_SEGS	UNSIGNED INT FLAGS			FS/SPLICE.C:1354
  SYSCALL_MOVE_PAGES = 259, //MOVE INDIVIDUAL PAGES OF A PROCESS TO ANOTHER NODE	0X102	UNSIGNED LONG NR_PAGES	CONST VOID __USER * __USER *PAGES	CONST INT __USER *NODES	INT __USER *STATUS	INT FLAGS	MM/MIGRATE.C:1663
  SYSCALL_UTIMENSAT = 260, //CHANGE FILE TIMESTAMPS WITH NANOSECOND PRECI‐ SION	0X103	CONST CHAR __USER *FILENAME	STRUCT TIMESPEC __USER *UTIMES	INT FLAGS			FS/UTIMES.C:171
  SYSCALL_EPOLL_PWAIT = 261, //WAIT FOR AN I/O EVENT ON AN EPOLL FILE DESCRIPTOR	0X104	STRUCT EPOLL_EVENT __USER *EVENTS	INT MAXEVENTS	INT TIMEOUT	CONST SIGSET_T __USER *SIGMASK	SIZE_T SIGSETSIZE	FS/EVENTPOLL.C:2051
  SYSCALL_SIGNALFD = 262, //CREATE A FILE DESCRIPTOR FOR ACCEPTING SIGNALS	0X105	SIGSET_T __USER *USER_MASK	SIZE_T SIZEMASK				FS/SIGNALFD.C:309
  SYSCALL_TIMERFD_CREATE = 263, //TIMERS THAT NOTIFY VIA FILE DESCRIPTORS	0X106	INT FLAGS					FS/TIMERFD.C:376
  SYSCALL_EVENTFD = 264, //CREATE A FILE DESCRIPTOR FOR EVENT NOTIFICATION	0X107						FS/EVENTFD.C:483
  SYSCALL_FALLOCATE = 265, //MANIPULATE FILE SPACE	0X108	INT MODE	LOFF_T OFFSET	LOFF_T LEN			FS/OPEN.C:337
  SYSCALL_TIMERFD_SETTIME = 266, //TIMERS THAT NOTIFY VIA FILE DESCRIPTORS	0X109	INT FLAGS	CONST STRUCT ITIMERSPEC __USER *UTMR	STRUCT ITIMERSPEC __USER *OTMR			FS/TIMERFD.C:524
  SYSCALL_TIMERFD_GETTIME = 267, //TIMERS THAT NOTIFY VIA FILE DESCRIPTORS	0X10A	STRUCT ITIMERSPEC __USER *OTMR					FS/TIMERFD.C:542
  SYSCALL_ACCEPT4 = 268, //ACCEPT A CONNECTION ON A SOCKET	0X10B	STRUCT SOCKADDR __USER *	INT __USER *	INT			NET/SOCKET.C:1461
  SYSCALL_SIGNALFD4 = 269, //CREATE A FILE DESCRIPTOR FOR ACCEPTING SIGNALS	0X10C	SIGSET_T __USER *USER_MASK	SIZE_T SIZEMASK	INT FLAGS			FS/SIGNALFD.C:255
  SYSCALL_EVENTFD2 = 270, //CREATE A FILE DESCRIPTOR FOR EVENT NOTIFICATION	0X10D	INT FLAGS					FS/EVENTFD.C:458
  SYSCALL_EPOLL_CREATE1 = 271, //OPEN AN EPOLL FILE DESCRIPTOR	0X10E						FS/EVENTPOLL.C:1793
  SYSCALL_DUP3 = 272, //DUPLICATE A FILE DESCRIPTOR	0X10F	UNSIGNED INT NEWFD	INT FLAGS				FS/FILE.C:889
  SYSCALL_PIPE2 = 273, //CREATE PIPE	0X110	INT FLAGS					FS/PIPE.C:839
  SYSCALL_INOTIFY_INIT1 = 274, //INITIALIZE AN INOTIFY INSTANCE	0X111						FS/NOTIFY/INOTIFY/INOTIFY_USER.C:669
  SYSCALL_PREADV = 275, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X112	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN	UNSIGNED LONG POS_L	UNSIGNED LONG POS_H		FS/READ_WRITE.C:1020
  SYSCALL_PWRITEV = 276, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X113	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN	UNSIGNED LONG POS_L	UNSIGNED LONG POS_H		FS/READ_WRITE.C:1040
  SYSCALL_RT_TGSIGQUEUEINFO = 277, //QUEUE A SIGNAL AND DATA	0X114	PID_T PID	INT SIG	SIGINFO_T __USER *UINFO			KERNEL/SIGNAL.C:3013
  SYSCALL_PERF_EVENT_OPEN = 278, //SET UP PERFORMANCE MONITORING	0X115	PID_T PID	INT CPU	INT GROUP_FD	UNSIGNED LONG FLAGS		KERNEL/EVENTS/CORE.C:9614
  SYSCALL_RECVMMSG = 279, //RECEIVE MULTIPLE MESSAGES ON A SOCKET	0X116	STRUCT MMSGHDR __USER *MSG	UNSIGNED INT VLEN	UNSIGNED FLAGS	STRUCT TIMESPEC __USER *TIMEOUT		NET/SOCKET.C:2315
  SYSCALL_FANOTIFY_INIT = 280, //CREATE AND INITIALIZE FANOTIFY GROUP	0X117	UNSIGNED INT EVENT_F_FLAGS					FS/NOTIFY/FANOTIFY/FANOTIFY_USER.C:707
  SYSCALL_FANOTIFY_MARK = 281, //ADD, REMOVE, OR MODIFY AN FANOTIFY MARK ON A FILESYS‐ TEM OBJECT	0X118	UNSIGNED INT FLAGS	U64 MASK	INT FD	CONST CHAR __USER *PATHNAME		FS/NOTIFY/FANOTIFY/FANOTIFY_USER.C:815
  SYSCALL_PRLIMIT64 = 282, //GET/SET RESOURCE LIMITS	0X119	UNSIGNED INT RESOURCE	CONST STRUCT RLIMIT64 __USER *NEW_RLIM	STRUCT RLIMIT64 __USER *OLD_RLIM			KERNEL/SYS.C:1449
  SYSCALL_NAME_TO_HANDLE_AT = 283, //OBTAIN HANDLE FOR A PATHNAME AND OPEN FILE VIA A HANDLE	0X11A	CONST CHAR __USER *NAME	STRUCT FILE_HANDLE __USER *HANDLE	INT __USER *MNT_ID	INT FLAG		FS/FHANDLE.C:92
  SYSCALL_OPEN_BY_HANDLE_AT = 284, //OBTAIN HANDLE FOR A PATHNAME AND OPEN FILE VIA A HANDLE	0X11B	STRUCT FILE_HANDLE __USER *HANDLE	INT FLAGS				FS/FHANDLE.C:255
  SYSCALL_CLOCK_ADJTIME = 285, //	0X11C	STRUCT TIMEX __USER *TX					KERNEL/TIME/POSIX-TIMERS.C:1045
  SYSCALL_SYNCFS = 286, //COMMIT FILESYSTEM CACHES TO DISK	0X11D						FS/SYNC.C:154
  SYSCALL_SENDMMSG = 287, //SEND MULTIPLE MESSAGES ON A SOCKET	0X11E	STRUCT MMSGHDR __USER *MSG	UNSIGNED INT VLEN	UNSIGNED FLAGS			NET/SOCKET.C:2101
  SYSCALL_SETNS = 288, //REASSOCIATE THREAD WITH A NAMESPACE	0X11F	INT NSTYPE					KERNEL/NSPROXY.C:236
  SYSCALL_GETCPU = 289, //DETERMINE CPU AND NUMA NODE ON WHICH THE CALLING THREAD IS RUNNING	0X120	UNSIGNED __USER *NODE	STRUCT GETCPU_CACHE __USER *CACHE				KERNEL/SYS.C:2271
  SYSCALL_PROCESS_VM_READV = 290, //TRANSFER DATA BETWEEN PROCESS ADDRESS SPACES	0X121	CONST STRUCT IOVEC __USER *LVEC	UNSIGNED LONG LIOVCNT	CONST STRUCT IOVEC __USER *RVEC	UNSIGNED LONG RIOVCNT	UNSIGNED LONG FLAGS	MM/PROCESS_VM_ACCESS.C:299
  SYSCALL_PROCESS_VM_WRITEV = 291, //TRANSFER DATA BETWEEN PROCESS ADDRESS SPACES	0X122	CONST STRUCT IOVEC __USER *LVEC	UNSIGNED LONG LIOVCNT	CONST STRUCT IOVEC __USER *RVEC	UNSIGNED LONG RIOVCNT	UNSIGNED LONG FLAGS	MM/PROCESS_VM_ACCESS.C:306
  SYSCALL_KCMP = 292, //COMPARE TWO PROCESSES TO DETERMINE IF THEY SHARE A KERNEL RESOURCE	0X123	PID_T PID2	INT TYPE	UNSIGNED LONG IDX1	UNSIGNED LONG IDX2		KERNEL/KCMP.C:97
  SYSCALL_FINIT_MODULE = 293, //LOAD A KERNEL MODULE	0X124	CONST CHAR __USER *UARGS	INT FLAGS				KERNEL/MODULE.C:3790
  SYSCALL_SCHED_SETATTR = 294, //SET AND GET SCHEDULING POLICY AND ATTRIBUTES	0X125	STRUCT SCHED_ATTR __USER *ATTR	UNSIGNED INT FLAGS				KERNEL/SCHED/CORE.C:4502
  SYSCALL_SCHED_GETATTR = 295, //SET AND GET SCHEDULING POLICY AND ATTRIBUTES	0X126	STRUCT SCHED_ATTR __USER *ATTR	UNSIGNED INT SIZE	UNSIGNED INT FLAGS			KERNEL/SCHED/CORE.C:4643
  SYSCALL_RENAMEAT2 = 296, //CHANGE THE NAME OR LOCATION OF A FILE	0X127	CONST CHAR __USER *OLDNAME	INT NEWDFD	CONST CHAR __USER *NEWNAME	UNSIGNED INT FLAGS		FS/NAMEI.C:4421
  SYSCALL_SECCOMP = 297, //OPERATE ON SECURE COMPUTING STATE OF THE PROCESS	0X128	UNSIGNED INT FLAGS	CONST CHAR __USER *UARGS				KERNEL/SECCOMP.C:796
  SYSCALL_GETRANDOM = 298, //OBTAIN A SERIES OF RANDOM BYTES	0X129	SIZE_T COUNT	UNSIGNED INT FLAGS				DRIVERS/CHAR/RANDOM.C:1880
  SYSCALL_MEMFD_CREATE = 299, //CREATE AN ANONYMOUS FILE	0X12A	UNSIGNED INT FLAGS					MM/SHMEM.C:3499
  SYSCALL_KEXEC_FILE_LOAD = 300, //LOAD A NEW KERNEL FOR LATER EXECUTION	0X12B	INT INITRD_FD	UNSIGNED LONG CMDLINE_LEN	CONST CHAR __USER *CMDLINE_PTR	UNSIGNED LONG FLAGS		KERNEL/KEXEC_FILE.C:260
  SYSCALL_BPF = 301, //PERFORM A COMMAND ON AN EXTENDED BPF MAP OR PROGRAM	0X12C	UNION BPF_ATTR *ATTR	UNSIGNED INT SIZE				KERNEL/BPF/SYSCALL.C:1005
  SYSCALL_USERFAULTFD = 302, //CREATE A FILE DESCRIPTOR FOR HANDLING PAGE FAULTS IN USER SPACE	0X12D						FS/USERFAULTFD.C:1354
  SYSCALL_MEMBARRIER = 303, //ISSUE MEMORY BARRIERS ON A SET OF THREADS	0X12E	INT FLAGS					KERNEL/MEMBARRIER.C:52
  SYSCALL_MLOCK2 = 304, //LOCK AND UNLOCK MEMORY	0X12F	SIZE_T LEN	INT FLAGS				MM/MLOCK.C:717
  SYSCALL_COPY_FILE_RANGE = 305, //COPY A RANGE OF DATA FROM ONE FILE TO ANOTHER	0X130	LOFF_T __USER *OFF_IN	INT FD_OUT	LOFF_T __USER *OFF_OUT	SIZE_T LEN	UNSIGNED INT FLAGS	FS/READ_WRITE.C:1583
  SYSCALL_PREADV2 = 306, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X131	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN	UNSIGNED LONG POS_L	UNSIGNED LONG POS_H	INT FLAGS	FS/READ_WRITE.C:1028
  SYSCALL_PWRITEV2 = 307, //READ OR WRITE DATA INTO MULTIPLE BUFFERS	0X132	CONST STRUCT IOVEC __USER *VEC	UNSIGNED LONG VLEN	UNSIGNED LONG POS_L	UNSIGNED LONG POS_H	INT FLAGS	FS/READ_WRITE.C:1048
  SYSCALL_PKEY_MPROTECT = 308, //SET PROTECTION ON A REGION OF MEMORY	0X133	SIZE_T LEN	UNSIGNED LONG PROT	INT PKEY			MM/MPROTECT.C:502
  SYSCALL_PKEY_ALLOC = 309, //ALLOCATE OR FREE A PROTECTION KEY	0X134	UNSIGNED LONG INIT_VAL					MM/MPROTECT.C:508
  SYSCALL_PKEY_FREE = 310, //ALLOCATE OR FREE A PROTECTION KEY	0X135						MM/MPROTECT.C:538
  SYSCALL_COMPAT_RT_SIGACTION = 311, //	0X136	CONST STRUCT COMPAT_SIGACTION __USER *	STRUCT COMPAT_SIGACTION __USER *	COMPAT_SIZE_T			NOT FOUND:
  SYSCALL_COMPAT_IOCTL = 312, //	0X137	UNSIGNED INT CMD	COMPAT_ULONG_T ARG				NOT FOUND:
  SYSCALL_COMPAT_READV = 313, //	0X138	CONST STRUCT COMPAT_IOVEC __USER *VEC	COMPAT_ULONG_T VLEN				NOT FOUND:
  SYSCALL_COMPAT_WRITEV = 314, //	0X139	CONST STRUCT COMPAT_IOVEC __USER *VEC	COMPAT_ULONG_T VLEN				NOT FOUND:
  SYSCALL_COMPAT_RECVFROM = 315, //	0X13A	VOID __USER *BUF	COMPAT_SIZE_T LEN	UNSIGNED FLAGS	STRUCT SOCKADDR __USER *ADDR	INT __USER *ADDRLEN	NOT FOUND:
  SYSCALL_COMPAT_SENDMSG = 316, //	0X13B	STRUCT COMPAT_MSGHDR __USER *MSG	UNSIGNED FLAGS				NOT FOUND:
  SYSCALL_COMPAT_RECVMSG = 317, //	0X13C	STRUCT COMPAT_MSGHDR __USER *MSG	UNSIGNED INT FLAGS				NOT FOUND:
  SYSCALL_COMPAT_PTRACE = 318, //	0X13D	COMPAT_LONG_T PID	COMPAT_LONG_T ADDR	COMPAT_LONG_T DATA			NOT FOUND:
  SYSCALL_COMPAT_RT_SIGPENDING = 319, //	0X13E	COMPAT_SIZE_T SIGSETSIZE					NOT FOUND:
  SYSCALL_COMPAT_RT_SIGTIMEDWAIT = 320, //	0X13F	STRUCT COMPAT_SIGINFO __USER *UINFO	STRUCT COMPAT_TIMESPEC __USER *UTS	COMPAT_SIZE_T SIGSETSIZE			NOT FOUND:
  SYSCALL_COMPAT_RT_SIGQUEUEINFO = 321, //	0X140	INT SIG	STRUCT COMPAT_SIGINFO __USER *UINFO				NOT FOUND:
  SYSCALL_COMPAT_SIGALTSTACK = 322, //	0X141	COMPAT_STACK_T __USER *UOSS_PTR					NOT FOUND:
  SYSCALL_COMPAT_TIMER_CREATE = 323, //	0X142	STRUCT COMPAT_SIGEVENT __USER *TIMER_EVENT_SPEC	TIMER_T __USER *CREATED_TIMER_ID				NOT FOUND:
  SYSCALL_COMPAT_MQ_NOTIFY = 324, //	0X143	CONST STRUCT COMPAT_SIGEVENT __USER *U_NOTIFICATION					NOT FOUND:
  SYSCALL_COMPAT_KEXEC_LOAD = 325, //	0X144	COMPAT_ULONG_T NR_SEGMENTS	STRUCT COMPAT_KEXEC_SEGMENT __USER *	COMPAT_ULONG_T FLAGS			NOT FOUND:
  SYSCALL_COMPAT_WAITID = 326, //	0X145	COMPAT_PID_T	STRUCT COMPAT_SIGINFO __USER *	INT	STRUCT COMPAT_RUSAGE __USER *		NOT FOUND:
  SYSCALL_COMPAT_SET_ROBUST_LIST = 327, //	0X146	COMPAT_SIZE_T LEN					NOT FOUND:
  SYSCALL_COMPAT_GET_ROBUST_LIST = 328, //	0X147	COMPAT_UPTR_T __USER *HEAD_PTR	COMPAT_SIZE_T __USER *LEN_PTR				NOT FOUND:
  SYSCALL_COMPAT_VMSPLICE = 329, //	0X148	CONST STRUCT COMPAT_IOVEC __USER *	UNSIGNED INT NR_SEGS	UNSIGNED INT FLAGS			NOT FOUND:
  SYSCALL_COMPAT_MOVE_PAGES = 330, //	0X149	COMPAT_ULONG_T NR_PAGES	__U32 __USER *PAGES	CONST INT __USER *NODES	INT __USER *STATUS	INT FLAGS	NOT FOUND:
  SYSCALL_COMPAT_PREADV64 = 331, //	0X14A	CONST STRUCT COMPAT_IOVEC __USER *VEC	UNSIGNED LONG VLEN	LOFF_T POS			NOT FOUND:
  SYSCALL_COMPAT_PWRITEV64 = 332, //	0X14B	CONST STRUCT COMPAT_IOVEC __USER *VEC	UNSIGNED LONG VLEN	LOFF_T POS			NOT FOUND:
  SYSCALL_COMPAT_RT_TGSIGQUEUEINFO = 333, //	0X14C	COMPAT_PID_T PID	INT SIG	STRUCT COMPAT_SIGINFO __USER *UINFO			NOT FOUND:
  SYSCALL_COMPAT_RECVMMSG = 334, //	0X14D	STRUCT COMPAT_MMSGHDR __USER *MMSG	UNSIGNED VLEN	UNSIGNED INT FLAGS	STRUCT COMPAT_TIMESPEC __USER *TIMEOUT		NOT FOUND:
  SYSCALL_COMPAT_SENDMMSG = 335, //	0X14E	STRUCT COMPAT_MMSGHDR __USER *MMSG	UNSIGNED VLEN	UNSIGNED INT FLAGS			NOT FOUND:
  SYSCALL_COMPAT_PROCESS_VM_READV = 336, //	0X14F	CONST STRUCT COMPAT_IOVEC __USER *LVEC	COMPAT_ULONG_T LIOVCNT	CONST STRUCT COMPAT_IOVEC __USER *RVEC	COMPAT_ULONG_T RIOVCNT	COMPAT_ULONG_T FLAGS	NOT FOUND:
  SYSCALL_COMPAT_PROCESS_VM_WRITEV = 337, //	0X150	CONST STRUCT COMPAT_IOVEC __USER *LVEC	COMPAT_ULONG_T LIOVCNT	CONST STRUCT COMPAT_IOVEC __USER *RVEC	COMPAT_ULONG_T RIOVCNT	COMPAT_ULONG_T FLAGS	NOT FOUND:
  SYSCALL_COMPAT_SETSOCKOPT = 338, //	0X151	INT LEVEL	INT OPTNAME	CHAR __USER *OPTVAL	UNSIGNED INT OPTLEN		NOT FOUND:
  SYSCALL_COMPAT_GETSOCKOPT = 339, //	0X152	INT LEVEL	INT OPTNAME	CHAR __USER *OPTVAL	INT __USER *OPTLEN		NOT FOUND:
  SYSCALL_COMPAT_IO_SETUP = 340, //	0X153	U32 __USER *CTX32P					NOT FOUND:
  SYSCALL_COMPAT_IO_SUBMIT = 341, //	0X154	INT NR		U32 __USER *IOCB				NOT FOUND:
};

/*#define SYSCALL_READ 1*/
/*#define SYSCALL_WRITE 2*/
/*#define SYSCALL_OPEN 3*/
/*#define SYSCALL_CLOSE 4*/
/*#define SYSCALL_NEWSTAT 5*/
/*#define SYSCALL_NEWFSTAT 6*/
/*#define SYSCALL_NEWLSTAT 7*/
/*#define SYSCALL_POLL 8*/
/*#define SYSCALL_LSEEK 9*/
/*#define SYSCALL_MMAP 10*/
/*#define SYSCALL_MPROTECT 11*/
/*#define SYSCALL_MUNMAP 12*/
/*#define SYSCALL_BRK 13*/
/*#define SYSCALL_RT_SIGACTION 14*/
/*#define SYSCALL_RT_SIGPROCMASK 15*/
/*#define SYSCALL_IOCTL 16*/
/*#define SYSCALL_PREAD64 17*/
/*#define SYSCALL_PWRITE64 18*/
/*#define SYSCALL_READV 19*/
/*#define SYSCALL_WRITEV 20*/
/*#define SYSCALL_ACCESS 21*/
/*#define SYSCALL_PIPE 22*/
/*#define SYSCALL_SELECT 23*/
/*#define SYSCALL_SCHED_YIELD 24*/
/*#define SYSCALL_MREMAP 25*/
/*#define SYSCALL_MSYNC 26*/
/*#define SYSCALL_MINCORE 27*/
/*#define SYSCALL_MADVISE 28*/
/*#define SYSCALL_SHMGET 29*/
/*#define SYSCALL_SHMAT 30*/
/*#define SYSCALL_SHMCTL 31*/
/*#define SYSCALL_DUP 32*/
/*#define SYSCALL_DUP2 33*/
/*#define SYSCALL_PAUSE 34*/
/*#define SYSCALL_NANOSLEEP 35*/
/*#define SYSCALL_GETITIMER 36*/
/*#define SYSCALL_ALARM 37*/
/*#define SYSCALL_SETITIMER 38*/
/*#define SYSCALL_GETPID 39*/
/*#define SYSCALL_SENDFILE64 40*/
/*#define SYSCALL_SOCKET 41*/
/*#define SYSCALL_CONNECT 42*/
/*#define SYSCALL_ACCEPT 43*/
/*#define SYSCALL_SENDTO 44*/
/*#define SYSCALL_RECVFROM 45*/
/*#define SYSCALL_SENDMSG 46*/
/*#define SYSCALL_RECVMSG 47*/
/*#define SYSCALL_SHUTDOWN 48*/
/*#define SYSCALL_BIND 49*/
/*#define SYSCALL_LISTEN 50*/
/*#define SYSCALL_GETSOCKNAME 51*/
/*#define SYSCALL_GETPEERNAME 52*/
/*#define SYSCALL_SOCKETPAIR 53*/
/*#define SYSCALL_SETSOCKOPT 54*/
/*#define SYSCALL_GETSOCKOPT 55*/
/*#define SYSCALL_EXIT 56*/
/*#define SYSCALL_WAIT4 57*/
/*#define SYSCALL_KILL 58*/
/*#define SYSCALL_NEWUNAME 59*/
/*#define SYSCALL_SEMGET 60*/
/*#define SYSCALL_SEMOP 61*/
/*#define SYSCALL_SEMCTL 62*/
/*#define SYSCALL_SHMDT 63*/
/*#define SYSCALL_MSGGET 64*/
/*#define SYSCALL_MSGSND 65*/
/*#define SYSCALL_MSGRCV 66*/
/*#define SYSCALL_MSGCTL 67*/
/*#define SYSCALL_FCNTL 68*/
/*#define SYSCALL_FLOCK 69*/
/*#define SYSCALL_FSYNC 70*/
/*#define SYSCALL_FDATASYNC 71*/
/*#define SYSCALL_TRUNCATE 72*/
/*#define SYSCALL_FTRUNCATE 73*/
/*#define SYSCALL_GETDENTS 74*/
/*#define SYSCALL_GETCWD 75*/
/*#define SYSCALL_CHDIR 76*/
/*#define SYSCALL_FCHDIR 77*/
/*#define SYSCALL_RENAME 78*/
/*#define SYSCALL_MKDIR 79*/
/*#define SYSCALL_RMDIR 80*/
/*#define SYSCALL_CREAT 81*/
/*#define SYSCALL_LINK 82*/
/*#define SYSCALL_UNLINK 83*/
/*#define SYSCALL_SYMLINK 84*/
/*#define SYSCALL_READLINK 85*/
/*#define SYSCALL_CHMOD 86*/
/*#define SYSCALL_FCHMOD 87*/
/*#define SYSCALL_CHOWN 88*/
/*#define SYSCALL_FCHOWN 89*/
/*#define SYSCALL_LCHOWN 90*/
/*#define SYSCALL_UMASK 91*/
/*#define SYSCALL_GETTIMEOFDAY 92*/
/*#define SYSCALL_GETRLIMIT 93*/
/*#define SYSCALL_GETRUSAGE 94*/
/*#define SYSCALL_SYSINFO 95*/
/*#define SYSCALL_TIMES 96*/
/*#define SYSCALL_PTRACE 97*/
/*#define SYSCALL_GETUID 98*/
/*#define SYSCALL_SYSLOG 99*/
/*#define SYSCALL_GETGID 100*/
/*#define SYSCALL_SETUID 101*/
/*#define SYSCALL_SETGID 102*/
/*#define SYSCALL_GETEUID 103*/
/*#define SYSCALL_GETEGID 104*/
/*#define SYSCALL_SETPGID 105*/
/*#define SYSCALL_GETPPID 106*/
/*#define SYSCALL_GETPGRP 107*/
/*#define SYSCALL_SETSID 108*/
/*#define SYSCALL_SETREUID 109*/
/*#define SYSCALL_SETREGID 110*/
/*#define SYSCALL_GETGROUPS 111*/
/*#define SYSCALL_SETGROUPS 112*/
/*#define SYSCALL_SETRESUID 113*/
/*#define SYSCALL_GETRESUID 114*/
/*#define SYSCALL_SETRESGID 115*/
/*#define SYSCALL_GETRESGID 116*/
/*#define SYSCALL_GETPGID 117*/
/*#define SYSCALL_SETFSUID 118*/
/*#define SYSCALL_SETFSGID 119*/
/*#define SYSCALL_GETSID 120*/
/*#define SYSCALL_CAPGET 121*/
/*#define SYSCALL_CAPSET 122*/
/*#define SYSCALL_RT_SIGPENDING 123*/
/*#define SYSCALL_RT_SIGTIMEDWAIT 124*/
/*#define SYSCALL_RT_SIGQUEUEINFO 125*/
/*#define SYSCALL_RT_SIGSUSPEND 126*/
/*#define SYSCALL_SIGALTSTACK 127*/
/*#define SYSCALL_UTIME 128*/
/*#define SYSCALL_MKNOD 129*/
/*#define SYSCALL_PERSONALITY 130*/
/*#define SYSCALL_USTAT 131*/
/*#define SYSCALL_STATFS 132*/
/*#define SYSCALL_FSTATFS 133*/
/*#define SYSCALL_SYSFS 134*/
/*#define SYSCALL_GETPRIORITY 135*/
/*#define SYSCALL_SETPRIORITY 136*/
/*#define SYSCALL_SCHED_SETPARAM 137*/
/*#define SYSCALL_SCHED_GETPARAM 138*/
/*#define SYSCALL_SCHED_SETSCHEDULER 139*/
/*#define SYSCALL_SCHED_GETSCHEDULER 140*/
/*#define SYSCALL_SCHED_GET_PRIORITY_MAX 141*/
/*#define SYSCALL_SCHED_GET_PRIORITY_MIN 142*/
/*#define SYSCALL_SCHED_RR_GET_INTERVAL 143*/
/*#define SYSCALL_MLOCK 144*/
/*#define SYSCALL_MUNLOCK 145*/
/*#define SYSCALL_MLOCKALL 146*/
/*#define SYSCALL_MUNLOCKALL 147*/
/*#define SYSCALL_VHANGUP 148*/
/*#define SYSCALL_MODIFY_LDT 149*/
/*#define SYSCALL_PIVOT_ROOT 150*/
/*#define SYSCALL_SYSCTL 151*/
/*#define SYSCALL_PRCTL 152*/
/*#define SYSCALL_ARCH_PRCTL 153*/
/*#define SYSCALL_ADJTIMEX 154*/
/*#define SYSCALL_SETRLIMIT 155*/
/*#define SYSCALL_CHROOT 156*/
/*#define SYSCALL_SYNC 157*/
/*#define SYSCALL_ACCT 158*/
/*#define SYSCALL_SETTIMEOFDAY 159*/
/*#define SYSCALL_MOUNT 160*/
/*#define SYSCALL_UMOUNT 161*/
/*#define SYSCALL_SWAPON 162*/
/*#define SYSCALL_SWAPOFF 163*/
/*#define SYSCALL_REBOOT 164*/
/*#define SYSCALL_SETHOSTNAME 165*/
/*#define SYSCALL_SETDOMAINNAME 166*/
/*#define SYSCALL_IOPERM 167*/
/*#define SYSCALL_INIT_MODULE 168*/
/*#define SYSCALL_DELETE_MODULE 169*/
/*#define SYSCALL_QUOTACTL 170*/
/*#define SYSCALL_GETTID 171*/
/*#define SYSCALL_READAHEAD 172*/
/*#define SYSCALL_SETXATTR 173*/
/*#define SYSCALL_LSETXATTR 174*/
/*#define SYSCALL_FSETXATTR 175*/
/*#define SYSCALL_GETXATTR 176*/
/*#define SYSCALL_LGETXATTR 177*/
/*#define SYSCALL_FGETXATTR 178*/
/*#define SYSCALL_LISTXATTR 179*/
/*#define SYSCALL_LLISTXATTR 180*/
/*#define SYSCALL_FLISTXATTR 181*/
/*#define SYSCALL_REMOVEXATTR 182*/
/*#define SYSCALL_LREMOVEXATTR 183*/
/*#define SYSCALL_FREMOVEXATTR 184*/
/*#define SYSCALL_TKILL 185*/
/*#define SYSCALL_TIME 186*/
/*#define SYSCALL_FUTEX 187*/
/*#define SYSCALL_SCHED_SETAFFINITY 188*/
/*#define SYSCALL_SCHED_GETAFFINITY 189*/
/*#define SYSCALL_IO_SETUP 190*/
/*#define SYSCALL_IO_DESTROY 191*/
/*#define SYSCALL_IO_GETEVENTS 192*/
/*#define SYSCALL_IO_SUBMIT 193*/
/*#define SYSCALL_IO_CANCEL 194*/
/*#define SYSCALL_LOOKUP_DCOOKIE 195*/
/*#define SYSCALL_EPOLL_CREATE 196*/
/*#define SYSCALL_REMAP_FILE_PAGES 197*/
/*#define SYSCALL_GETDENTS64 198*/
/*#define SYSCALL_SET_TID_ADDRESS 199*/
/*#define SYSCALL_RESTART_SYSCALL 200*/
/*#define SYSCALL_SEMTIMEDOP 201*/
/*#define SYSCALL_FADVISE64 202*/
/*#define SYSCALL_TIMER_CREATE 203*/
/*#define SYSCALL_TIMER_SETTIME 204*/
/*#define SYSCALL_TIMER_GETTIME 205*/
/*#define SYSCALL_TIMER_GETOVERRUN 206*/
/*#define SYSCALL_TIMER_DELETE 207*/
/*#define SYSCALL_CLOCK_SETTIME 208*/
/*#define SYSCALL_CLOCK_GETTIME 209*/
/*#define SYSCALL_CLOCK_GETRES 210*/
/*#define SYSCALL_CLOCK_NANOSLEEP 211*/
/*#define SYSCALL_EXIT_GROUP 212*/
/*#define SYSCALL_EPOLL_WAIT 213*/
/*#define SYSCALL_EPOLL_CTL 214*/
/*#define SYSCALL_TGKILL 215*/
/*#define SYSCALL_UTIMES 216*/
/*#define SYSCALL_MBIND 217*/
/*#define SYSCALL_SET_MEMPOLICY 218*/
/*#define SYSCALL_GET_MEMPOLICY 219*/
/*#define SYSCALL_MQ_OPEN 220*/
/*#define SYSCALL_MQ_UNLINK 221*/
/*#define SYSCALL_MQ_TIMEDSEND 222*/
/*#define SYSCALL_MQ_TIMEDRECEIVE 223*/
/*#define SYSCALL_MQ_NOTIFY 224*/
/*#define SYSCALL_MQ_GETSETATTR 225*/
/*#define SYSCALL_KEXEC_LOAD 226*/
/*#define SYSCALL_WAITID 227*/
/*#define SYSCALL_ADD_KEY 228*/
/*#define SYSCALL_REQUEST_KEY 229*/
/*#define SYSCALL_KEYCTL 230*/
/*#define SYSCALL_IOPRIO_SET 231*/
/*#define SYSCALL_IOPRIO_GET 232*/
/*#define SYSCALL_INOTIFY_INIT 233*/
/*#define SYSCALL_INOTIFY_ADD_WATCH 234*/
/*#define SYSCALL_INOTIFY_RM_WATCH 235*/
/*#define SYSCALL_MIGRATE_PAGES 236*/
/*#define SYSCALL_OPENAT 237*/
/*#define SYSCALL_MKDIRAT 238*/
/*#define SYSCALL_MKNODAT 239*/
/*#define SYSCALL_FCHOWNAT 240*/
/*#define SYSCALL_FUTIMESAT 241*/
/*#define SYSCALL_NEWFSTATAT 242*/
/*#define SYSCALL_UNLINKAT 243*/
/*#define SYSCALL_RENAMEAT 244*/
/*#define SYSCALL_LINKAT 245*/
/*#define SYSCALL_SYMLINKAT 246*/
/*#define SYSCALL_READLINKAT 247*/
/*#define SYSCALL_FCHMODAT 248*/
/*#define SYSCALL_FACCESSAT 249*/
/*#define SYSCALL_PSELECT6 250*/
/*#define SYSCALL_PPOLL 251*/
/*#define SYSCALL_UNSHARE 252*/
/*#define SYSCALL_SET_ROBUST_LIST 253*/
/*#define SYSCALL_GET_ROBUST_LIST 254*/
/*#define SYSCALL_SPLICE 255*/
/*#define SYSCALL_TEE 256*/
/*#define SYSCALL_SYNC_FILE_RANGE 257*/
/*#define SYSCALL_VMSPLICE 258*/
/*#define SYSCALL_MOVE_PAGES 259*/
/*#define SYSCALL_UTIMENSAT 260*/
/*#define SYSCALL_EPOLL_PWAIT 261*/
/*#define SYSCALL_SIGNALFD 262*/
/*#define SYSCALL_TIMERFD_CREATE 263*/
/*#define SYSCALL_EVENTFD 264*/
/*#define SYSCALL_FALLOCATE 265*/
/*#define SYSCALL_TIMERFD_SETTIME 266*/
/*#define SYSCALL_TIMERFD_GETTIME 267*/
/*#define SYSCALL_ACCEPT4 268*/
/*#define SYSCALL_SIGNALFD4 269*/
/*#define SYSCALL_EVENTFD2 270*/
/*#define SYSCALL_EPOLL_CREATE1 271*/
/*#define SYSCALL_DUP3 272*/
/*#define SYSCALL_PIPE2 273*/
/*#define SYSCALL_INOTIFY_INIT1 274*/
/*#define SYSCALL_PREADV 275*/
/*#define SYSCALL_PWRITEV 276*/
/*#define SYSCALL_RT_TGSIGQUEUEINFO 277*/
/*#define SYSCALL_PERF_EVENT_OPEN 278*/
/*#define SYSCALL_RECVMMSG 279*/
/*#define SYSCALL_FANOTIFY_INIT 280*/
/*#define SYSCALL_FANOTIFY_MARK 281*/
/*#define SYSCALL_PRLIMIT64 282*/
/*#define SYSCALL_NAME_TO_HANDLE_AT 283*/
/*#define SYSCALL_OPEN_BY_HANDLE_AT 284*/
/*#define SYSCALL_CLOCK_ADJTIME 285*/
/*#define SYSCALL_SYNCFS 286*/
/*#define SYSCALL_SENDMMSG 287*/
/*#define SYSCALL_SETNS 288*/
/*#define SYSCALL_GETCPU 289*/
/*#define SYSCALL_PROCESS_VM_READV 290*/
/*#define SYSCALL_PROCESS_VM_WRITEV 291*/
/*#define SYSCALL_KCMP 292*/
/*#define SYSCALL_FINIT_MODULE 293*/
/*#define SYSCALL_SCHED_SETATTR 294*/
/*#define SYSCALL_SCHED_GETATTR 295*/
/*#define SYSCALL_RENAMEAT2 296*/
/*#define SYSCALL_SECCOMP 297*/
/*#define SYSCALL_GETRANDOM 298*/
/*#define SYSCALL_MEMFD_CREATE 299*/
/*#define SYSCALL_KEXEC_FILE_LOAD 300*/
/*#define SYSCALL_BPF 301*/
/*#define SYSCALL_USERFAULTFD 302*/
/*#define SYSCALL_MEMBARRIER 303*/
/*#define SYSCALL_MLOCK2 304*/
/*#define SYSCALL_COPY_FILE_RANGE 305*/
/*#define SYSCALL_PREADV2 306*/
/*#define SYSCALL_PWRITEV2 307*/
/*#define SYSCALL_PKEY_MPROTECT 308*/
/*#define SYSCALL_PKEY_ALLOC 309*/
/*#define SYSCALL_PKEY_FREE 310*/
/*#define SYSCALL_COMPAT_RT_SIGACTION 311*/
/*#define SYSCALL_COMPAT_IOCTL 312*/
/*#define SYSCALL_COMPAT_READV 313*/
/*#define SYSCALL_COMPAT_WRITEV 314*/
/*#define SYSCALL_COMPAT_RECVFROM 315*/
/*#define SYSCALL_COMPAT_SENDMSG 316*/
/*#define SYSCALL_COMPAT_RECVMSG 317*/
/*#define SYSCALL_COMPAT_PTRACE 318*/
/*#define SYSCALL_COMPAT_RT_SIGPENDING 319*/
/*#define SYSCALL_COMPAT_RT_SIGTIMEDWAIT 320*/
/*#define SYSCALL_COMPAT_RT_SIGQUEUEINFO 321*/
/*#define SYSCALL_COMPAT_SIGALTSTACK 322*/
/*#define SYSCALL_COMPAT_TIMER_CREATE 323*/
/*#define SYSCALL_COMPAT_MQ_NOTIFY 324*/
/*#define SYSCALL_COMPAT_KEXEC_LOAD 325*/
/*#define SYSCALL_COMPAT_WAITID 326*/
/*#define SYSCALL_COMPAT_SET_ROBUST_LIST 327*/
/*#define SYSCALL_COMPAT_GET_ROBUST_LIST 328*/
/*#define SYSCALL_COMPAT_VMSPLICE 329*/
/*#define SYSCALL_COMPAT_MOVE_PAGES 330*/
/*#define SYSCALL_COMPAT_PREADV64 331*/
/*#define SYSCALL_COMPAT_PWRITEV64 332*/
/*#define SYSCALL_COMPAT_RT_TGSIGQUEUEINFO 333*/
/*#define SYSCALL_COMPAT_RECVMMSG 334*/
/*#define SYSCALL_COMPAT_SENDMMSG 335*/
/*#define SYSCALL_COMPAT_PROCESS_VM_READV 336*/
/*#define SYSCALL_COMPAT_PROCESS_VM_WRITEV 337*/
/*#define SYSCALL_COMPAT_SETSOCKOPT 338*/
/*#define SYSCALL_COMPAT_GETSOCKOPT 339*/
/*#define SYSCALL_COMPAT_IO_SETUP 340*/
/*#define SYSCALL_COMPAT_IO_SUBMIT 341*/

#endif //SYSCALL_H
